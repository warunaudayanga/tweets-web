// @ts-check
const eslint = require("@eslint/js");
const tseslint = require("typescript-eslint");
const angular = require("angular-eslint");
const unusedImports = require('eslint-plugin-unused-imports');

const eslintPluginPrettierRecommended = require('eslint-plugin-prettier/recommended');


module.exports = tseslint.config(
  {
    files: ["**/*.ts"],
    plugins: {
      'unused-imports': unusedImports,
    },
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommended,
      ...tseslint.configs.stylistic,
      ...angular.configs.tsRecommended,
      eslintPluginPrettierRecommended,
    ],
    processor: angular.processInlineTemplates,
    rules: {
      "prettier/prettier": [
        "error",
        {
          endOfLine: "auto",
          tabWidth: 4,
          useTabs: false,
          singleQuote: false,
          semi: true,
          bracketSpacing: true,
          arrowParens: "avoid",
          trailingComma: "all",
          printWidth: 120,
        },
      ],
      "@angular-eslint/directive-selector": [
        "error",
        {
          type: "attribute",
          prefix: "app",
          style: "camelCase",
        },
      ],
      "@angular-eslint/component-selector": [
        "error",
        {
          type: "element",
          prefix: "app",
          style: "kebab-case",
        },
      ],
      "@angular-eslint/prefer-standalone": "off",
      "@angular-eslint/prefer-inject": "off",
      "@angular-eslint/no-output-on-prefix": "off",
      "@typescript-eslint/explicit-function-return-type": "error",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-unused-vars": "off",
      "@typescript-eslint/no-empty-object-type": "off",
      "@typescript-eslint/no-empty-function": [
        "error",
        {
          allow: ["constructors"],
        },
      ],
      "array-bracket-newline": "off",
      "array-bracket-spacing": "error",
      "array-callback-return": "warn",
      "array-element-newline": "off",
      "arrow-spacing": [
        "error",
        {
          after: true,
          before: true,
        },
      ],
      "block-scoped-var": "error",
      "block-spacing": "error",
      "brace-style": "off",
      camelcase: "warn",
      "class-methods-use-this": "off",
      "comma-dangle": ["error", "always-multiline"],
      "comma-spacing": [
        "error",
        {
          after: true,
          before: false,
        },
      ],
      "comma-style": ["error", "last"],
      complexity: "off",
      "computed-property-spacing": ["error", "never"],
      "consistent-return": "off",
      "consistent-this": "error",
      "default-case": "off",
      "default-case-last": "error",
      "default-param-last": "error",
      "dot-location": ["error", "property"],
      "dot-notation": [
        "off",
        {
          allowKeywords: true,
        },
      ],
      "eol-last": "error",
      eqeqeq: "error",
      "func-call-spacing": "error",
      "func-name-matching": "error",
      "func-names": "error",
      "func-style": ["error", "expression"],
      "function-paren-newline": "off",
      "generator-star-spacing": "error",
      "grouped-accessor-pairs": "error",
      "guard-for-in": "error",
      "id-denylist": "error",
      "id-length": "off",
      "id-match": "error",
      "implicit-arrow-linebreak": "off",
      indent: "off",
      "init-declarations": "off",
      "jsx-quotes": "error",
      "key-spacing": [
        "error",
        {
          beforeColon: false,
          afterColon: true,
        },
      ],
      "keyword-spacing": [
        "error",
        {
          before: true,
          after: true,
        },
      ],
      "line-comment-position": "off",
      "linebreak-style": "off",
      "lines-around-comment": "off",
      "lines-between-class-members": "error",
      "max-classes-per-file": "off",
      "max-depth": "off",
      "max-len": "off",
      "max-lines": "off",
      "max-lines-per-function": "off",
      "max-nested-callbacks": "error",
      "max-params": "off",
      "max-statements": "off",
      "max-statements-per-line": "error",
      "multiline-comment-style": "off",
      "new-parens": "error",
      "newline-per-chained-call": "off",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-await-in-loop": "error",
      "no-bitwise": "error",
      "no-caller": "error",
      "no-confusing-arrow": "off",
      "no-console": "error",
      "no-constructor-return": "error",
      "no-continue": "off",
      "no-div-regex": "error",
      "no-duplicate-imports": "error",
      "no-else-return": "error",
      "no-empty-function": [
        "error",
        {
          allow: ["constructors"],
        },
      ],
      "no-eq-null": "error",
      "no-eval": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-label": "error",
      "no-extra-parens": "off",
      "no-floating-decimal": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-inline-comments": "off",
      "no-invalid-this": "off",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loop-func": "error",
      "no-loss-of-precision": "error",
      "no-magic-numbers": "off",
      "no-mixed-operators": "off",
      "no-multi-assign": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-multiple-empty-lines": "error",
      "no-negated-condition": "off",
      "no-nested-ternary": "off",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-octal-escape": "error",
      "no-param-reassign": "error",
      "no-plusplus": "off",
      "no-promise-executor-return": "error",
      "no-proto": "error",
      "no-restricted-exports": "error",
      "no-restricted-globals": "error",
      "no-restricted-imports": "error",
      "no-restricted-properties": "error",
      "no-restricted-syntax": "error",
      "no-return-assign": "error",
      "no-return-await": "off",
      "no-script-url": "error",
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-shadow": "off",
      "no-tabs": "error",
      "no-template-curly-in-string": "error",
      "no-ternary": "off",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef-init": "off",
      "no-undefined": "off",
      "no-underscore-dangle": "off",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-expressions": "error",
      "no-use-before-define": "error",
      "no-useless-backreference": "error",
      "no-useless-call": "error",
      "no-useless-computed-key": "error",
      "no-useless-concat": "error",
      "no-useless-constructor": "off",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "off",
      "no-whitespace-before-property": "error",
      "nonblock-statement-body-position": "error",
      "object-curly-newline": "error",
      "object-curly-spacing": ["error", "always"],
      "object-shorthand": "error",
      "one-var": "off",
      "one-var-declaration-per-line": "error",
      "operator-assignment": "error",
      "operator-linebreak": "error",
      "padded-blocks": "off",
      "padding-line-between-statements": "error",
      "prefer-arrow-callback": "error",
      "prefer-const": "off",
      "prefer-destructuring": "off",
      "prefer-exponentiation-operator": "error",
      "prefer-named-capture-group": "off",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-regex-literals": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "off",
      "quote-props": "off",
      quotes: [
        "warn",
        "double",
        {
          avoidEscape: true,
        },
      ],
      radix: "off",
      "require-atomic-updates": "error",
      "require-await": "error",
      "require-unicode-regexp": "off",
      "rest-spread-spacing": "error",
      semi: "error",
      "semi-spacing": "error",
      "semi-style": ["error", "last"],
      "sort-imports": "off",
      "sort-keys": "off",
      "sort-vars": "error",
      "space-before-blocks": "off",
      "space-before-function-paren": "off",
      "space-in-parens": "off",
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "spaced-comment": ["error", "always"],
      strict: ["error", "function"],
      "switch-colon-spacing": [
        "error",
        {
          after: true,
          before: false,
        },
      ],
      "symbol-description": "error",
      "template-curly-spacing": ["error", "never"],
      "template-tag-spacing": "error",
      "unicode-bom": ["error", "never"],
      "vars-on-top": "error",
      "wrap-iife": "error",
      "wrap-regex": "error",
      "yield-star-spacing": "error",
      yoda: ["error", "never"],
    },
  },
  {
    files: ["**/*.html"],
    extends: [
      ...angular.configs.templateRecommended,
      ...angular.configs.templateAccessibility,
    ],
    rules: {
      "@angular-eslint/template/interactive-supports-focus": "off",
      "@angular-eslint/template/click-events-have-key-events": "off",
      "@angular-eslint/template/label-has-associated-control": "off"
    }
  }
);
